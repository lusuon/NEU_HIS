package com.neu.his.Dao;

import com.neu.his.entity.AllUser;
import com.neu.his.entity.AllUserExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

@Mapper
public interface AllUserMapper {
    @SelectProvider(type=AllUserSqlProvider.class, method="countByExample")
    long countByExample(AllUserExample example);

    @DeleteProvider(type=AllUserSqlProvider.class, method="deleteByExample")
    int deleteByExample(AllUserExample example);

    @Delete({
        "delete from all_user",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    @Insert({
        "insert into all_user (username, password, ",
        "real_name, user_type, ",
        "title_id, schedule_participation, ",
        "dept_id, reg_level_id, ",
        "is_deleted)",
        "values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, ",
        "#{realName,jdbcType=VARCHAR}, #{userType,jdbcType=VARCHAR}, ",
        "#{titleId,jdbcType=VARCHAR}, #{scheduleParticipation,jdbcType=BIT}, ",
        "#{deptId,jdbcType=INTEGER}, #{regLevelId,jdbcType=INTEGER}, ",
        "#{isDeleted,jdbcType=BIT})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insert(AllUser record);

    @InsertProvider(type=AllUserSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insertSelective(AllUser record);

    @SelectProvider(type=AllUserSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="username", property="username", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
        @Result(column="real_name", property="realName", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_type", property="userType", jdbcType=JdbcType.VARCHAR),
        @Result(column="title_id", property="titleId", jdbcType=JdbcType.VARCHAR),
        @Result(column="schedule_participation", property="scheduleParticipation", jdbcType=JdbcType.BIT),
        @Result(column="dept_id", property="deptId", jdbcType=JdbcType.INTEGER),
        @Result(column="reg_level_id", property="regLevelId", jdbcType=JdbcType.INTEGER),
        @Result(column="is_deleted", property="isDeleted", jdbcType=JdbcType.BIT)
    })
    List<AllUser> selectByExample(AllUserExample example);

    @Select({
        "select",
        "id, username, password, real_name, user_type, title_id, schedule_participation, ",
        "dept_id, reg_level_id, is_deleted",
        "from all_user",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="username", property="username", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
        @Result(column="real_name", property="realName", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_type", property="userType", jdbcType=JdbcType.VARCHAR),
        @Result(column="title_id", property="titleId", jdbcType=JdbcType.VARCHAR),
        @Result(column="schedule_participation", property="scheduleParticipation", jdbcType=JdbcType.BIT),
        @Result(column="dept_id", property="deptId", jdbcType=JdbcType.INTEGER),
        @Result(column="reg_level_id", property="regLevelId", jdbcType=JdbcType.INTEGER),
        @Result(column="is_deleted", property="isDeleted", jdbcType=JdbcType.BIT)
    })
    AllUser selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_user
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    AllUser selectByPrimaryKeyWithLogicalDelete(@Param("id") Integer id, @Param("andLogicalDeleted") boolean andLogicalDeleted);

    @UpdateProvider(type=AllUserSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") AllUser record, @Param("example") AllUserExample example);

    @UpdateProvider(type=AllUserSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") AllUser record, @Param("example") AllUserExample example);

    @UpdateProvider(type=AllUserSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(AllUser record);

    @Update({
        "update all_user",
        "set username = #{username,jdbcType=VARCHAR},",
          "password = #{password,jdbcType=VARCHAR},",
          "real_name = #{realName,jdbcType=VARCHAR},",
          "user_type = #{userType,jdbcType=VARCHAR},",
          "title_id = #{titleId,jdbcType=VARCHAR},",
          "schedule_participation = #{scheduleParticipation,jdbcType=BIT},",
          "dept_id = #{deptId,jdbcType=INTEGER},",
          "reg_level_id = #{regLevelId,jdbcType=INTEGER},",
          "is_deleted = #{isDeleted,jdbcType=BIT}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(AllUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_user
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    int logicalDeleteByExample(@Param("example") AllUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_user
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    int logicalDeleteByPrimaryKey(Integer id);
}