package com.neu.his.Dao;

import com.neu.his.entity.PrescriptionMedicineDtl;
import com.neu.his.entity.PrescriptionMedicineDtlExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

@Mapper
public interface PrescriptionMedicineDtlMapper {
    @SelectProvider(type=PrescriptionMedicineDtlSqlProvider.class, method="countByExample")
    long countByExample(PrescriptionMedicineDtlExample example);

    @DeleteProvider(type=PrescriptionMedicineDtlSqlProvider.class, method="deleteByExample")
    int deleteByExample(PrescriptionMedicineDtlExample example);

    @Delete({
        "delete from prescription_medicine_dtl",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    @Insert({
        "insert into prescription_medicine_dtl (prescription_id, medicine_id, ",
        "method, dosage, ",
        "frequency, quantity, ",
        "prescription_status, is_deleted)",
        "values (#{prescriptionId,jdbcType=INTEGER}, #{medicineId,jdbcType=INTEGER}, ",
        "#{method,jdbcType=VARCHAR}, #{dosage,jdbcType=VARCHAR}, ",
        "#{frequency,jdbcType=VARCHAR}, #{quantity,jdbcType=INTEGER}, ",
        "#{prescriptionStatus,jdbcType=INTEGER}, #{isDeleted,jdbcType=BIT})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insert(PrescriptionMedicineDtl record);

    @InsertProvider(type=PrescriptionMedicineDtlSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insertSelective(PrescriptionMedicineDtl record);

    @SelectProvider(type=PrescriptionMedicineDtlSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="prescription_id", property="prescriptionId", jdbcType=JdbcType.INTEGER),
        @Result(column="medicine_id", property="medicineId", jdbcType=JdbcType.INTEGER),
        @Result(column="method", property="method", jdbcType=JdbcType.VARCHAR),
        @Result(column="dosage", property="dosage", jdbcType=JdbcType.VARCHAR),
        @Result(column="frequency", property="frequency", jdbcType=JdbcType.VARCHAR),
        @Result(column="quantity", property="quantity", jdbcType=JdbcType.INTEGER),
        @Result(column="prescription_status", property="prescriptionStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="is_deleted", property="isDeleted", jdbcType=JdbcType.BIT)
    })
    List<PrescriptionMedicineDtl> selectByExample(PrescriptionMedicineDtlExample example);

    @Select({
        "select",
        "id, prescription_id, medicine_id, method, dosage, frequency, quantity, prescription_status, ",
        "is_deleted",
        "from prescription_medicine_dtl",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="prescription_id", property="prescriptionId", jdbcType=JdbcType.INTEGER),
        @Result(column="medicine_id", property="medicineId", jdbcType=JdbcType.INTEGER),
        @Result(column="method", property="method", jdbcType=JdbcType.VARCHAR),
        @Result(column="dosage", property="dosage", jdbcType=JdbcType.VARCHAR),
        @Result(column="frequency", property="frequency", jdbcType=JdbcType.VARCHAR),
        @Result(column="quantity", property="quantity", jdbcType=JdbcType.INTEGER),
        @Result(column="prescription_status", property="prescriptionStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="is_deleted", property="isDeleted", jdbcType=JdbcType.BIT)
    })
    PrescriptionMedicineDtl selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table prescription_medicine_dtl
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    PrescriptionMedicineDtl selectByPrimaryKeyWithLogicalDelete(@Param("id") Integer id, @Param("andLogicalDeleted") boolean andLogicalDeleted);

    @UpdateProvider(type=PrescriptionMedicineDtlSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") PrescriptionMedicineDtl record, @Param("example") PrescriptionMedicineDtlExample example);

    @UpdateProvider(type=PrescriptionMedicineDtlSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") PrescriptionMedicineDtl record, @Param("example") PrescriptionMedicineDtlExample example);

    @UpdateProvider(type=PrescriptionMedicineDtlSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(PrescriptionMedicineDtl record);

    @Update({
        "update prescription_medicine_dtl",
        "set prescription_id = #{prescriptionId,jdbcType=INTEGER},",
          "medicine_id = #{medicineId,jdbcType=INTEGER},",
          "method = #{method,jdbcType=VARCHAR},",
          "dosage = #{dosage,jdbcType=VARCHAR},",
          "frequency = #{frequency,jdbcType=VARCHAR},",
          "quantity = #{quantity,jdbcType=INTEGER},",
          "prescription_status = #{prescriptionStatus,jdbcType=INTEGER},",
          "is_deleted = #{isDeleted,jdbcType=BIT}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(PrescriptionMedicineDtl record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table prescription_medicine_dtl
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    int logicalDeleteByExample(@Param("example") PrescriptionMedicineDtlExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table prescription_medicine_dtl
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    int logicalDeleteByPrimaryKey(Integer id);
}