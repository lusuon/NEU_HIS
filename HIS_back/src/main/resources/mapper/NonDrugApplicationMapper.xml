<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.neu.dao.NonDrugApplicationMapper">
  <resultMap id="BaseResultMap" type="org.neu.entity.NonDrugApplication">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="case_id" jdbcType="INTEGER" property="case_id" />
    <result column="reg_id" jdbcType="INTEGER" property="reg_id" />
    <result column="item_id" jdbcType="INTEGER" property="item_id" />
    <result column="item_name" jdbcType="VARCHAR" property="item_name" />
    <result column="requirement" jdbcType="VARCHAR" property="requirement" />
    <result column="check_part" jdbcType="VARCHAR" property="check_part" />
    <result column="is_urgent" jdbcType="BIT" property="is_urgent" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="generate_time" jdbcType="DATE" property="generate_time" />
    <result column="generate_doctor_id" jdbcType="INTEGER" property="generate_doctor_id" />
    <result column="checker_id" jdbcType="INTEGER" property="checker_id" />
    <result column="recorder_id" jdbcType="INTEGER" property="recorder_id" />
    <result column="check_time" jdbcType="DATE" property="check_time" />
    <result column="check_result" jdbcType="VARCHAR" property="check_result" />
    <result column="result_time" jdbcType="DATE" property="result_time" />
    <result column="application_status" jdbcType="INTEGER" property="application_status" />
    <result column="record_category" jdbcType="INTEGER" property="record_category" />
    <result column="is_deleted" jdbcType="BIT" property="is_deleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, case_id, reg_id, item_id, item_name, requirement, check_part, is_urgent, num, 
    generate_time, generate_doctor_id, checker_id, recorder_id, check_time, check_result, 
    result_time, application_status, record_category, is_deleted
  </sql>
  <select id="selectByExample" parameterType="org.neu.entity.NonDrugApplicationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from non_drug_application
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from non_drug_application
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKeyWithLogicalDelete" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select 
    <include refid="Base_Column_List" />
    from non_drug_application
    where id = #{id,jdbcType=INTEGER}
      and is_deleted = 
    <choose>
      <when test="andLogicalDeleted">
        '1'
      </when>
      <otherwise>
        '0'
      </otherwise>
    </choose>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from non_drug_application
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.neu.entity.NonDrugApplicationExample">
    delete from non_drug_application
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.neu.entity.NonDrugApplication">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into non_drug_application (case_id, reg_id, item_id, 
      item_name, requirement, check_part, 
      is_urgent, num, generate_time, 
      generate_doctor_id, checker_id, recorder_id, 
      check_time, check_result, result_time, 
      application_status, record_category, is_deleted
      )
    values (#{case_id,jdbcType=INTEGER}, #{reg_id,jdbcType=INTEGER}, #{item_id,jdbcType=INTEGER}, 
      #{item_name,jdbcType=VARCHAR}, #{requirement,jdbcType=VARCHAR}, #{check_part,jdbcType=VARCHAR}, 
      #{is_urgent,jdbcType=BIT}, #{num,jdbcType=INTEGER}, #{generate_time,jdbcType=DATE}, 
      #{generate_doctor_id,jdbcType=INTEGER}, #{checker_id,jdbcType=INTEGER}, #{recorder_id,jdbcType=INTEGER}, 
      #{check_time,jdbcType=DATE}, #{check_result,jdbcType=VARCHAR}, #{result_time,jdbcType=DATE}, 
      #{application_status,jdbcType=INTEGER}, #{record_category,jdbcType=INTEGER}, #{is_deleted,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.neu.entity.NonDrugApplication">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into non_drug_application
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="case_id != null">
        case_id,
      </if>
      <if test="reg_id != null">
        reg_id,
      </if>
      <if test="item_id != null">
        item_id,
      </if>
      <if test="item_name != null">
        item_name,
      </if>
      <if test="requirement != null">
        requirement,
      </if>
      <if test="check_part != null">
        check_part,
      </if>
      <if test="is_urgent != null">
        is_urgent,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="generate_time != null">
        generate_time,
      </if>
      <if test="generate_doctor_id != null">
        generate_doctor_id,
      </if>
      <if test="checker_id != null">
        checker_id,
      </if>
      <if test="recorder_id != null">
        recorder_id,
      </if>
      <if test="check_time != null">
        check_time,
      </if>
      <if test="check_result != null">
        check_result,
      </if>
      <if test="result_time != null">
        result_time,
      </if>
      <if test="application_status != null">
        application_status,
      </if>
      <if test="record_category != null">
        record_category,
      </if>
      <if test="is_deleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="case_id != null">
        #{case_id,jdbcType=INTEGER},
      </if>
      <if test="reg_id != null">
        #{reg_id,jdbcType=INTEGER},
      </if>
      <if test="item_id != null">
        #{item_id,jdbcType=INTEGER},
      </if>
      <if test="item_name != null">
        #{item_name,jdbcType=VARCHAR},
      </if>
      <if test="requirement != null">
        #{requirement,jdbcType=VARCHAR},
      </if>
      <if test="check_part != null">
        #{check_part,jdbcType=VARCHAR},
      </if>
      <if test="is_urgent != null">
        #{is_urgent,jdbcType=BIT},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="generate_time != null">
        #{generate_time,jdbcType=DATE},
      </if>
      <if test="generate_doctor_id != null">
        #{generate_doctor_id,jdbcType=INTEGER},
      </if>
      <if test="checker_id != null">
        #{checker_id,jdbcType=INTEGER},
      </if>
      <if test="recorder_id != null">
        #{recorder_id,jdbcType=INTEGER},
      </if>
      <if test="check_time != null">
        #{check_time,jdbcType=DATE},
      </if>
      <if test="check_result != null">
        #{check_result,jdbcType=VARCHAR},
      </if>
      <if test="result_time != null">
        #{result_time,jdbcType=DATE},
      </if>
      <if test="application_status != null">
        #{application_status,jdbcType=INTEGER},
      </if>
      <if test="record_category != null">
        #{record_category,jdbcType=INTEGER},
      </if>
      <if test="is_deleted != null">
        #{is_deleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.neu.entity.NonDrugApplicationExample" resultType="java.lang.Long">
    select count(*) from non_drug_application
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update non_drug_application
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.case_id != null">
        case_id = #{record.case_id,jdbcType=INTEGER},
      </if>
      <if test="record.reg_id != null">
        reg_id = #{record.reg_id,jdbcType=INTEGER},
      </if>
      <if test="record.item_id != null">
        item_id = #{record.item_id,jdbcType=INTEGER},
      </if>
      <if test="record.item_name != null">
        item_name = #{record.item_name,jdbcType=VARCHAR},
      </if>
      <if test="record.requirement != null">
        requirement = #{record.requirement,jdbcType=VARCHAR},
      </if>
      <if test="record.check_part != null">
        check_part = #{record.check_part,jdbcType=VARCHAR},
      </if>
      <if test="record.is_urgent != null">
        is_urgent = #{record.is_urgent,jdbcType=BIT},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.generate_time != null">
        generate_time = #{record.generate_time,jdbcType=DATE},
      </if>
      <if test="record.generate_doctor_id != null">
        generate_doctor_id = #{record.generate_doctor_id,jdbcType=INTEGER},
      </if>
      <if test="record.checker_id != null">
        checker_id = #{record.checker_id,jdbcType=INTEGER},
      </if>
      <if test="record.recorder_id != null">
        recorder_id = #{record.recorder_id,jdbcType=INTEGER},
      </if>
      <if test="record.check_time != null">
        check_time = #{record.check_time,jdbcType=DATE},
      </if>
      <if test="record.check_result != null">
        check_result = #{record.check_result,jdbcType=VARCHAR},
      </if>
      <if test="record.result_time != null">
        result_time = #{record.result_time,jdbcType=DATE},
      </if>
      <if test="record.application_status != null">
        application_status = #{record.application_status,jdbcType=INTEGER},
      </if>
      <if test="record.record_category != null">
        record_category = #{record.record_category,jdbcType=INTEGER},
      </if>
      <if test="record.is_deleted != null">
        is_deleted = #{record.is_deleted,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update non_drug_application
    set id = #{record.id,jdbcType=INTEGER},
      case_id = #{record.case_id,jdbcType=INTEGER},
      reg_id = #{record.reg_id,jdbcType=INTEGER},
      item_id = #{record.item_id,jdbcType=INTEGER},
      item_name = #{record.item_name,jdbcType=VARCHAR},
      requirement = #{record.requirement,jdbcType=VARCHAR},
      check_part = #{record.check_part,jdbcType=VARCHAR},
      is_urgent = #{record.is_urgent,jdbcType=BIT},
      num = #{record.num,jdbcType=INTEGER},
      generate_time = #{record.generate_time,jdbcType=DATE},
      generate_doctor_id = #{record.generate_doctor_id,jdbcType=INTEGER},
      checker_id = #{record.checker_id,jdbcType=INTEGER},
      recorder_id = #{record.recorder_id,jdbcType=INTEGER},
      check_time = #{record.check_time,jdbcType=DATE},
      check_result = #{record.check_result,jdbcType=VARCHAR},
      result_time = #{record.result_time,jdbcType=DATE},
      application_status = #{record.application_status,jdbcType=INTEGER},
      record_category = #{record.record_category,jdbcType=INTEGER},
      is_deleted = #{record.is_deleted,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.neu.entity.NonDrugApplication">
    update non_drug_application
    <set>
      <if test="case_id != null">
        case_id = #{case_id,jdbcType=INTEGER},
      </if>
      <if test="reg_id != null">
        reg_id = #{reg_id,jdbcType=INTEGER},
      </if>
      <if test="item_id != null">
        item_id = #{item_id,jdbcType=INTEGER},
      </if>
      <if test="item_name != null">
        item_name = #{item_name,jdbcType=VARCHAR},
      </if>
      <if test="requirement != null">
        requirement = #{requirement,jdbcType=VARCHAR},
      </if>
      <if test="check_part != null">
        check_part = #{check_part,jdbcType=VARCHAR},
      </if>
      <if test="is_urgent != null">
        is_urgent = #{is_urgent,jdbcType=BIT},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="generate_time != null">
        generate_time = #{generate_time,jdbcType=DATE},
      </if>
      <if test="generate_doctor_id != null">
        generate_doctor_id = #{generate_doctor_id,jdbcType=INTEGER},
      </if>
      <if test="checker_id != null">
        checker_id = #{checker_id,jdbcType=INTEGER},
      </if>
      <if test="recorder_id != null">
        recorder_id = #{recorder_id,jdbcType=INTEGER},
      </if>
      <if test="check_time != null">
        check_time = #{check_time,jdbcType=DATE},
      </if>
      <if test="check_result != null">
        check_result = #{check_result,jdbcType=VARCHAR},
      </if>
      <if test="result_time != null">
        result_time = #{result_time,jdbcType=DATE},
      </if>
      <if test="application_status != null">
        application_status = #{application_status,jdbcType=INTEGER},
      </if>
      <if test="record_category != null">
        record_category = #{record_category,jdbcType=INTEGER},
      </if>
      <if test="is_deleted != null">
        is_deleted = #{is_deleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.neu.entity.NonDrugApplication">
    update non_drug_application
    set case_id = #{case_id,jdbcType=INTEGER},
      reg_id = #{reg_id,jdbcType=INTEGER},
      item_id = #{item_id,jdbcType=INTEGER},
      item_name = #{item_name,jdbcType=VARCHAR},
      requirement = #{requirement,jdbcType=VARCHAR},
      check_part = #{check_part,jdbcType=VARCHAR},
      is_urgent = #{is_urgent,jdbcType=BIT},
      num = #{num,jdbcType=INTEGER},
      generate_time = #{generate_time,jdbcType=DATE},
      generate_doctor_id = #{generate_doctor_id,jdbcType=INTEGER},
      checker_id = #{checker_id,jdbcType=INTEGER},
      recorder_id = #{recorder_id,jdbcType=INTEGER},
      check_time = #{check_time,jdbcType=DATE},
      check_result = #{check_result,jdbcType=VARCHAR},
      result_time = #{result_time,jdbcType=DATE},
      application_status = #{application_status,jdbcType=INTEGER},
      record_category = #{record_category,jdbcType=INTEGER},
      is_deleted = #{is_deleted,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="logicalDeleteByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update non_drug_application set is_deleted = 1
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="logicalDeleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update non_drug_application set is_deleted = 1
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="entity.NonDrugApplication">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="case_id" jdbcType="INTEGER" property="case_id" />
    <result column="reg_id" jdbcType="INTEGER" property="reg_id" />
    <result column="item_id" jdbcType="INTEGER" property="item_id" />
    <result column="item_name" jdbcType="VARCHAR" property="item_name" />
    <result column="requirement" jdbcType="VARCHAR" property="requirement" />
    <result column="check_part" jdbcType="VARCHAR" property="check_part" />
    <result column="is_urgent" jdbcType="BIT" property="is_urgent" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="generate_time" jdbcType="DATE" property="generate_time" />
    <result column="generate_doctor_id" jdbcType="INTEGER" property="generate_doctor_id" />
    <result column="checker_id" jdbcType="INTEGER" property="checker_id" />
    <result column="recorder_id" jdbcType="INTEGER" property="recorder_id" />
    <result column="check_time" jdbcType="DATE" property="check_time" />
    <result column="check_result" jdbcType="VARCHAR" property="check_result" />
    <result column="result_time" jdbcType="DATE" property="result_time" />
    <result column="application_status" jdbcType="INTEGER" property="application_status" />
    <result column="record_category" jdbcType="INTEGER" property="record_category" />
    <result column="is_deleted" jdbcType="BIT" property="is_deleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, case_id, reg_id, item_id, item_name, requirement, check_part, is_urgent, num, 
    generate_time, generate_doctor_id, checker_id, recorder_id, check_time, check_result, 
    result_time, application_status, record_category, is_deleted
  </sql>
  <select id="selectByExample" parameterType="entity.NonDrugApplicationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from non_drug_application
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from non_drug_application
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from non_drug_application
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="entity.NonDrugApplicationExample">
    delete from non_drug_application
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="entity.NonDrugApplication">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into non_drug_application (case_id, reg_id, item_id, 
      item_name, requirement, check_part, 
      is_urgent, num, generate_time, 
      generate_doctor_id, checker_id, recorder_id, 
      check_time, check_result, result_time, 
      application_status, record_category, is_deleted
      )
    values (#{case_id,jdbcType=INTEGER}, #{reg_id,jdbcType=INTEGER}, #{item_id,jdbcType=INTEGER}, 
      #{item_name,jdbcType=VARCHAR}, #{requirement,jdbcType=VARCHAR}, #{check_part,jdbcType=VARCHAR}, 
      #{is_urgent,jdbcType=BIT}, #{num,jdbcType=INTEGER}, #{generate_time,jdbcType=DATE}, 
      #{generate_doctor_id,jdbcType=INTEGER}, #{checker_id,jdbcType=INTEGER}, #{recorder_id,jdbcType=INTEGER}, 
      #{check_time,jdbcType=DATE}, #{check_result,jdbcType=VARCHAR}, #{result_time,jdbcType=DATE}, 
      #{application_status,jdbcType=INTEGER}, #{record_category,jdbcType=INTEGER}, #{is_deleted,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="entity.NonDrugApplication">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into non_drug_application
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="case_id != null">
        case_id,
      </if>
      <if test="reg_id != null">
        reg_id,
      </if>
      <if test="item_id != null">
        item_id,
      </if>
      <if test="item_name != null">
        item_name,
      </if>
      <if test="requirement != null">
        requirement,
      </if>
      <if test="check_part != null">
        check_part,
      </if>
      <if test="is_urgent != null">
        is_urgent,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="generate_time != null">
        generate_time,
      </if>
      <if test="generate_doctor_id != null">
        generate_doctor_id,
      </if>
      <if test="checker_id != null">
        checker_id,
      </if>
      <if test="recorder_id != null">
        recorder_id,
      </if>
      <if test="check_time != null">
        check_time,
      </if>
      <if test="check_result != null">
        check_result,
      </if>
      <if test="result_time != null">
        result_time,
      </if>
      <if test="application_status != null">
        application_status,
      </if>
      <if test="record_category != null">
        record_category,
      </if>
      <if test="is_deleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="case_id != null">
        #{case_id,jdbcType=INTEGER},
      </if>
      <if test="reg_id != null">
        #{reg_id,jdbcType=INTEGER},
      </if>
      <if test="item_id != null">
        #{item_id,jdbcType=INTEGER},
      </if>
      <if test="item_name != null">
        #{item_name,jdbcType=VARCHAR},
      </if>
      <if test="requirement != null">
        #{requirement,jdbcType=VARCHAR},
      </if>
      <if test="check_part != null">
        #{check_part,jdbcType=VARCHAR},
      </if>
      <if test="is_urgent != null">
        #{is_urgent,jdbcType=BIT},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="generate_time != null">
        #{generate_time,jdbcType=DATE},
      </if>
      <if test="generate_doctor_id != null">
        #{generate_doctor_id,jdbcType=INTEGER},
      </if>
      <if test="checker_id != null">
        #{checker_id,jdbcType=INTEGER},
      </if>
      <if test="recorder_id != null">
        #{recorder_id,jdbcType=INTEGER},
      </if>
      <if test="check_time != null">
        #{check_time,jdbcType=DATE},
      </if>
      <if test="check_result != null">
        #{check_result,jdbcType=VARCHAR},
      </if>
      <if test="result_time != null">
        #{result_time,jdbcType=DATE},
      </if>
      <if test="application_status != null">
        #{application_status,jdbcType=INTEGER},
      </if>
      <if test="record_category != null">
        #{record_category,jdbcType=INTEGER},
      </if>
      <if test="is_deleted != null">
        #{is_deleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="entity.NonDrugApplicationExample" resultType="java.lang.Long">
    select count(*) from non_drug_application
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update non_drug_application
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.case_id != null">
        case_id = #{record.case_id,jdbcType=INTEGER},
      </if>
      <if test="record.reg_id != null">
        reg_id = #{record.reg_id,jdbcType=INTEGER},
      </if>
      <if test="record.item_id != null">
        item_id = #{record.item_id,jdbcType=INTEGER},
      </if>
      <if test="record.item_name != null">
        item_name = #{record.item_name,jdbcType=VARCHAR},
      </if>
      <if test="record.requirement != null">
        requirement = #{record.requirement,jdbcType=VARCHAR},
      </if>
      <if test="record.check_part != null">
        check_part = #{record.check_part,jdbcType=VARCHAR},
      </if>
      <if test="record.is_urgent != null">
        is_urgent = #{record.is_urgent,jdbcType=BIT},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.generate_time != null">
        generate_time = #{record.generate_time,jdbcType=DATE},
      </if>
      <if test="record.generate_doctor_id != null">
        generate_doctor_id = #{record.generate_doctor_id,jdbcType=INTEGER},
      </if>
      <if test="record.checker_id != null">
        checker_id = #{record.checker_id,jdbcType=INTEGER},
      </if>
      <if test="record.recorder_id != null">
        recorder_id = #{record.recorder_id,jdbcType=INTEGER},
      </if>
      <if test="record.check_time != null">
        check_time = #{record.check_time,jdbcType=DATE},
      </if>
      <if test="record.check_result != null">
        check_result = #{record.check_result,jdbcType=VARCHAR},
      </if>
      <if test="record.result_time != null">
        result_time = #{record.result_time,jdbcType=DATE},
      </if>
      <if test="record.application_status != null">
        application_status = #{record.application_status,jdbcType=INTEGER},
      </if>
      <if test="record.record_category != null">
        record_category = #{record.record_category,jdbcType=INTEGER},
      </if>
      <if test="record.is_deleted != null">
        is_deleted = #{record.is_deleted,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update non_drug_application
    set id = #{record.id,jdbcType=INTEGER},
      case_id = #{record.case_id,jdbcType=INTEGER},
      reg_id = #{record.reg_id,jdbcType=INTEGER},
      item_id = #{record.item_id,jdbcType=INTEGER},
      item_name = #{record.item_name,jdbcType=VARCHAR},
      requirement = #{record.requirement,jdbcType=VARCHAR},
      check_part = #{record.check_part,jdbcType=VARCHAR},
      is_urgent = #{record.is_urgent,jdbcType=BIT},
      num = #{record.num,jdbcType=INTEGER},
      generate_time = #{record.generate_time,jdbcType=DATE},
      generate_doctor_id = #{record.generate_doctor_id,jdbcType=INTEGER},
      checker_id = #{record.checker_id,jdbcType=INTEGER},
      recorder_id = #{record.recorder_id,jdbcType=INTEGER},
      check_time = #{record.check_time,jdbcType=DATE},
      check_result = #{record.check_result,jdbcType=VARCHAR},
      result_time = #{record.result_time,jdbcType=DATE},
      application_status = #{record.application_status,jdbcType=INTEGER},
      record_category = #{record.record_category,jdbcType=INTEGER},
      is_deleted = #{record.is_deleted,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="entity.NonDrugApplication">
    update non_drug_application
    <set>
      <if test="case_id != null">
        case_id = #{case_id,jdbcType=INTEGER},
      </if>
      <if test="reg_id != null">
        reg_id = #{reg_id,jdbcType=INTEGER},
      </if>
      <if test="item_id != null">
        item_id = #{item_id,jdbcType=INTEGER},
      </if>
      <if test="item_name != null">
        item_name = #{item_name,jdbcType=VARCHAR},
      </if>
      <if test="requirement != null">
        requirement = #{requirement,jdbcType=VARCHAR},
      </if>
      <if test="check_part != null">
        check_part = #{check_part,jdbcType=VARCHAR},
      </if>
      <if test="is_urgent != null">
        is_urgent = #{is_urgent,jdbcType=BIT},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="generate_time != null">
        generate_time = #{generate_time,jdbcType=DATE},
      </if>
      <if test="generate_doctor_id != null">
        generate_doctor_id = #{generate_doctor_id,jdbcType=INTEGER},
      </if>
      <if test="checker_id != null">
        checker_id = #{checker_id,jdbcType=INTEGER},
      </if>
      <if test="recorder_id != null">
        recorder_id = #{recorder_id,jdbcType=INTEGER},
      </if>
      <if test="check_time != null">
        check_time = #{check_time,jdbcType=DATE},
      </if>
      <if test="check_result != null">
        check_result = #{check_result,jdbcType=VARCHAR},
      </if>
      <if test="result_time != null">
        result_time = #{result_time,jdbcType=DATE},
      </if>
      <if test="application_status != null">
        application_status = #{application_status,jdbcType=INTEGER},
      </if>
      <if test="record_category != null">
        record_category = #{record_category,jdbcType=INTEGER},
      </if>
      <if test="is_deleted != null">
        is_deleted = #{is_deleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.NonDrugApplication">
    update non_drug_application
    set case_id = #{case_id,jdbcType=INTEGER},
      reg_id = #{reg_id,jdbcType=INTEGER},
      item_id = #{item_id,jdbcType=INTEGER},
      item_name = #{item_name,jdbcType=VARCHAR},
      requirement = #{requirement,jdbcType=VARCHAR},
      check_part = #{check_part,jdbcType=VARCHAR},
      is_urgent = #{is_urgent,jdbcType=BIT},
      num = #{num,jdbcType=INTEGER},
      generate_time = #{generate_time,jdbcType=DATE},
      generate_doctor_id = #{generate_doctor_id,jdbcType=INTEGER},
      checker_id = #{checker_id,jdbcType=INTEGER},
      recorder_id = #{recorder_id,jdbcType=INTEGER},
      check_time = #{check_time,jdbcType=DATE},
      check_result = #{check_result,jdbcType=VARCHAR},
      result_time = #{result_time,jdbcType=DATE},
      application_status = #{application_status,jdbcType=INTEGER},
      record_category = #{record_category,jdbcType=INTEGER},
      is_deleted = #{is_deleted,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>