<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.neu.his.dao.InvoiceMapper">
  <resultMap id="BaseResultMap" type="org.neu.his.entity.Invoice">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="invoice_no" jdbcType="INTEGER" property="invoice_no" />
    <result column="amount" jdbcType="DOUBLE" property="amount" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="operate_time" jdbcType="TIMESTAMP" property="operate_time" />
    <result column="operator_id" jdbcType="INTEGER" property="operator_id" />
    <result column="reg_id" jdbcType="INTEGER" property="reg_id" />
    <result column="pay_method" jdbcType="INTEGER" property="pay_method" />
    <result column="red_invoice_no" jdbcType="INTEGER" property="red_invoice_no" />
    <result column="invoice_status" jdbcType="INTEGER" property="invoice_status" />
    <result column="is_deleted" jdbcType="BIT" property="is_deleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, invoice_no, amount, type, operate_time, operator_id, reg_id, pay_method, red_invoice_no, 
    invoice_status, is_deleted
  </sql>
  <select id="selectByExample" parameterType="org.neu.his.entity.InvoiceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from invoice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from invoice
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKeyWithLogicalDelete" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select 
    <include refid="Base_Column_List" />
    from invoice
    where id = #{id,jdbcType=INTEGER}
      and is_deleted = 
    <choose>
      <when test="andLogicalDeleted">
        '1'
      </when>
      <otherwise>
        '0'
      </otherwise>
    </choose>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from invoice
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.neu.his.entity.InvoiceExample">
    delete from invoice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.neu.his.entity.Invoice">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into invoice (invoice_no, amount, type, 
      operate_time, operator_id, reg_id, 
      pay_method, red_invoice_no, invoice_status, 
      is_deleted)
    values (#{invoice_no,jdbcType=INTEGER}, #{amount,jdbcType=DOUBLE}, #{type,jdbcType=INTEGER}, 
      #{operate_time,jdbcType=TIMESTAMP}, #{operator_id,jdbcType=INTEGER}, #{reg_id,jdbcType=INTEGER}, 
      #{pay_method,jdbcType=INTEGER}, #{red_invoice_no,jdbcType=INTEGER}, #{invoice_status,jdbcType=INTEGER}, 
      #{is_deleted,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="org.neu.his.entity.Invoice">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into invoice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="invoice_no != null">
        invoice_no,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="operate_time != null">
        operate_time,
      </if>
      <if test="operator_id != null">
        operator_id,
      </if>
      <if test="reg_id != null">
        reg_id,
      </if>
      <if test="pay_method != null">
        pay_method,
      </if>
      <if test="red_invoice_no != null">
        red_invoice_no,
      </if>
      <if test="invoice_status != null">
        invoice_status,
      </if>
      <if test="is_deleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="invoice_no != null">
        #{invoice_no,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="operate_time != null">
        #{operate_time,jdbcType=TIMESTAMP},
      </if>
      <if test="operator_id != null">
        #{operator_id,jdbcType=INTEGER},
      </if>
      <if test="reg_id != null">
        #{reg_id,jdbcType=INTEGER},
      </if>
      <if test="pay_method != null">
        #{pay_method,jdbcType=INTEGER},
      </if>
      <if test="red_invoice_no != null">
        #{red_invoice_no,jdbcType=INTEGER},
      </if>
      <if test="invoice_status != null">
        #{invoice_status,jdbcType=INTEGER},
      </if>
      <if test="is_deleted != null">
        #{is_deleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.neu.his.entity.InvoiceExample" resultType="java.lang.Long">
    select count(*) from invoice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update invoice
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.invoice_no != null">
        invoice_no = #{record.invoice_no,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DOUBLE},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.operate_time != null">
        operate_time = #{record.operate_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operator_id != null">
        operator_id = #{record.operator_id,jdbcType=INTEGER},
      </if>
      <if test="record.reg_id != null">
        reg_id = #{record.reg_id,jdbcType=INTEGER},
      </if>
      <if test="record.pay_method != null">
        pay_method = #{record.pay_method,jdbcType=INTEGER},
      </if>
      <if test="record.red_invoice_no != null">
        red_invoice_no = #{record.red_invoice_no,jdbcType=INTEGER},
      </if>
      <if test="record.invoice_status != null">
        invoice_status = #{record.invoice_status,jdbcType=INTEGER},
      </if>
      <if test="record.is_deleted != null">
        is_deleted = #{record.is_deleted,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update invoice
    set id = #{record.id,jdbcType=INTEGER},
      invoice_no = #{record.invoice_no,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=DOUBLE},
      type = #{record.type,jdbcType=INTEGER},
      operate_time = #{record.operate_time,jdbcType=TIMESTAMP},
      operator_id = #{record.operator_id,jdbcType=INTEGER},
      reg_id = #{record.reg_id,jdbcType=INTEGER},
      pay_method = #{record.pay_method,jdbcType=INTEGER},
      red_invoice_no = #{record.red_invoice_no,jdbcType=INTEGER},
      invoice_status = #{record.invoice_status,jdbcType=INTEGER},
      is_deleted = #{record.is_deleted,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.neu.his.entity.Invoice">
    update invoice
    <set>
      <if test="invoice_no != null">
        invoice_no = #{invoice_no,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="operate_time != null">
        operate_time = #{operate_time,jdbcType=TIMESTAMP},
      </if>
      <if test="operator_id != null">
        operator_id = #{operator_id,jdbcType=INTEGER},
      </if>
      <if test="reg_id != null">
        reg_id = #{reg_id,jdbcType=INTEGER},
      </if>
      <if test="pay_method != null">
        pay_method = #{pay_method,jdbcType=INTEGER},
      </if>
      <if test="red_invoice_no != null">
        red_invoice_no = #{red_invoice_no,jdbcType=INTEGER},
      </if>
      <if test="invoice_status != null">
        invoice_status = #{invoice_status,jdbcType=INTEGER},
      </if>
      <if test="is_deleted != null">
        is_deleted = #{is_deleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.neu.his.entity.Invoice">
    update invoice
    set invoice_no = #{invoice_no,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DOUBLE},
      type = #{type,jdbcType=INTEGER},
      operate_time = #{operate_time,jdbcType=TIMESTAMP},
      operator_id = #{operator_id,jdbcType=INTEGER},
      reg_id = #{reg_id,jdbcType=INTEGER},
      pay_method = #{pay_method,jdbcType=INTEGER},
      red_invoice_no = #{red_invoice_no,jdbcType=INTEGER},
      invoice_status = #{invoice_status,jdbcType=INTEGER},
      is_deleted = #{is_deleted,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="logicalDeleteByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update invoice set is_deleted = 1
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="logicalDeleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update invoice set is_deleted = 1
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="entity.Invoice">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="invoice_no" jdbcType="INTEGER" property="invoice_no" />
    <result column="amount" jdbcType="DOUBLE" property="amount" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="operate_time" jdbcType="TIMESTAMP" property="operate_time" />
    <result column="operator_id" jdbcType="INTEGER" property="operator_id" />
    <result column="reg_id" jdbcType="INTEGER" property="reg_id" />
    <result column="pay_method" jdbcType="INTEGER" property="pay_method" />
    <result column="red_invoice_no" jdbcType="INTEGER" property="red_invoice_no" />
    <result column="invoice_status" jdbcType="INTEGER" property="invoice_status" />
    <result column="is_deleted" jdbcType="BIT" property="is_deleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, invoice_no, amount, type, operate_time, operator_id, reg_id, pay_method, red_invoice_no, 
    invoice_status, is_deleted
  </sql>
  <select id="selectByExample" parameterType="entity.InvoiceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from invoice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from invoice
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from invoice
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="entity.InvoiceExample">
    delete from invoice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="entity.Invoice">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into invoice (invoice_no, amount, type, 
      operate_time, operator_id, reg_id, 
      pay_method, red_invoice_no, invoice_status, 
      is_deleted)
    values (#{invoice_no,jdbcType=INTEGER}, #{amount,jdbcType=DOUBLE}, #{type,jdbcType=INTEGER}, 
      #{operate_time,jdbcType=TIMESTAMP}, #{operator_id,jdbcType=INTEGER}, #{reg_id,jdbcType=INTEGER}, 
      #{pay_method,jdbcType=INTEGER}, #{red_invoice_no,jdbcType=INTEGER}, #{invoice_status,jdbcType=INTEGER}, 
      #{is_deleted,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="entity.Invoice">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into invoice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="invoice_no != null">
        invoice_no,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="operate_time != null">
        operate_time,
      </if>
      <if test="operator_id != null">
        operator_id,
      </if>
      <if test="reg_id != null">
        reg_id,
      </if>
      <if test="pay_method != null">
        pay_method,
      </if>
      <if test="red_invoice_no != null">
        red_invoice_no,
      </if>
      <if test="invoice_status != null">
        invoice_status,
      </if>
      <if test="is_deleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="invoice_no != null">
        #{invoice_no,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="operate_time != null">
        #{operate_time,jdbcType=TIMESTAMP},
      </if>
      <if test="operator_id != null">
        #{operator_id,jdbcType=INTEGER},
      </if>
      <if test="reg_id != null">
        #{reg_id,jdbcType=INTEGER},
      </if>
      <if test="pay_method != null">
        #{pay_method,jdbcType=INTEGER},
      </if>
      <if test="red_invoice_no != null">
        #{red_invoice_no,jdbcType=INTEGER},
      </if>
      <if test="invoice_status != null">
        #{invoice_status,jdbcType=INTEGER},
      </if>
      <if test="is_deleted != null">
        #{is_deleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="entity.InvoiceExample" resultType="java.lang.Long">
    select count(*) from invoice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update invoice
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.invoice_no != null">
        invoice_no = #{record.invoice_no,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DOUBLE},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.operate_time != null">
        operate_time = #{record.operate_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operator_id != null">
        operator_id = #{record.operator_id,jdbcType=INTEGER},
      </if>
      <if test="record.reg_id != null">
        reg_id = #{record.reg_id,jdbcType=INTEGER},
      </if>
      <if test="record.pay_method != null">
        pay_method = #{record.pay_method,jdbcType=INTEGER},
      </if>
      <if test="record.red_invoice_no != null">
        red_invoice_no = #{record.red_invoice_no,jdbcType=INTEGER},
      </if>
      <if test="record.invoice_status != null">
        invoice_status = #{record.invoice_status,jdbcType=INTEGER},
      </if>
      <if test="record.is_deleted != null">
        is_deleted = #{record.is_deleted,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update invoice
    set id = #{record.id,jdbcType=INTEGER},
      invoice_no = #{record.invoice_no,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=DOUBLE},
      type = #{record.type,jdbcType=INTEGER},
      operate_time = #{record.operate_time,jdbcType=TIMESTAMP},
      operator_id = #{record.operator_id,jdbcType=INTEGER},
      reg_id = #{record.reg_id,jdbcType=INTEGER},
      pay_method = #{record.pay_method,jdbcType=INTEGER},
      red_invoice_no = #{record.red_invoice_no,jdbcType=INTEGER},
      invoice_status = #{record.invoice_status,jdbcType=INTEGER},
      is_deleted = #{record.is_deleted,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="entity.Invoice">
    update invoice
    <set>
      <if test="invoice_no != null">
        invoice_no = #{invoice_no,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="operate_time != null">
        operate_time = #{operate_time,jdbcType=TIMESTAMP},
      </if>
      <if test="operator_id != null">
        operator_id = #{operator_id,jdbcType=INTEGER},
      </if>
      <if test="reg_id != null">
        reg_id = #{reg_id,jdbcType=INTEGER},
      </if>
      <if test="pay_method != null">
        pay_method = #{pay_method,jdbcType=INTEGER},
      </if>
      <if test="red_invoice_no != null">
        red_invoice_no = #{red_invoice_no,jdbcType=INTEGER},
      </if>
      <if test="invoice_status != null">
        invoice_status = #{invoice_status,jdbcType=INTEGER},
      </if>
      <if test="is_deleted != null">
        is_deleted = #{is_deleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.Invoice">
    update invoice
    set invoice_no = #{invoice_no,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DOUBLE},
      type = #{type,jdbcType=INTEGER},
      operate_time = #{operate_time,jdbcType=TIMESTAMP},
      operator_id = #{operator_id,jdbcType=INTEGER},
      reg_id = #{reg_id,jdbcType=INTEGER},
      pay_method = #{pay_method,jdbcType=INTEGER},
      red_invoice_no = #{red_invoice_no,jdbcType=INTEGER},
      invoice_status = #{invoice_status,jdbcType=INTEGER},
      is_deleted = #{is_deleted,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>