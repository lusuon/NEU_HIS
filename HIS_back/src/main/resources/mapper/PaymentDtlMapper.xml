<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.neu.dao.PaymentDtlMapper">
  <resultMap id="BaseResultMap" type="org.neu.entity.PaymentDtl">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="reg_id" jdbcType="INTEGER" property="reg_id" />
    <result column="invoice_no" jdbcType="INTEGER" property="invoice_no" />
    <result column="item_id" jdbcType="INTEGER" property="item_id" />
    <result column="item_type" jdbcType="BIT" property="item_type" />
    <result column="item_name" jdbcType="VARCHAR" property="item_name" />
    <result column="item_unit_price" jdbcType="DOUBLE" property="item_unit_price" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="dept_id" jdbcType="INTEGER" property="dept_id" />
    <result column="prescription_generation_time" jdbcType="TIMESTAMP" property="prescription_generation_time" />
    <result column="generator_id" jdbcType="INTEGER" property="generator_id" />
    <result column="payment_operation_time" jdbcType="TIMESTAMP" property="payment_operation_time" />
    <result column="operator_id" jdbcType="INTEGER" property="operator_id" />
    <result column="method" jdbcType="VARCHAR" property="method" />
    <result column="related_refund_id" jdbcType="INTEGER" property="related_refund_id" />
    <result column="is_deleted" jdbcType="BIT" property="is_deleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, reg_id, invoice_no, item_id, item_type, item_name, item_unit_price, quantity, 
    dept_id, prescription_generation_time, generator_id, payment_operation_time, operator_id, 
    method, related_refund_id, is_deleted
  </sql>
  <select id="selectByExample" parameterType="org.neu.entity.PaymentDtlExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from payment_dtl
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from payment_dtl
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKeyWithLogicalDelete" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select 
    <include refid="Base_Column_List" />
    from payment_dtl
    where id = #{id,jdbcType=INTEGER}
      and is_deleted = 
    <choose>
      <when test="andLogicalDeleted">
        '1'
      </when>
      <otherwise>
        '0'
      </otherwise>
    </choose>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from payment_dtl
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.neu.entity.PaymentDtlExample">
    delete from payment_dtl
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.neu.entity.PaymentDtl">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into payment_dtl (reg_id, invoice_no, item_id, 
      item_type, item_name, item_unit_price, 
      quantity, dept_id, prescription_generation_time, 
      generator_id, payment_operation_time, 
      operator_id, method, related_refund_id, 
      is_deleted)
    values (#{reg_id,jdbcType=INTEGER}, #{invoice_no,jdbcType=INTEGER}, #{item_id,jdbcType=INTEGER}, 
      #{item_type,jdbcType=BIT}, #{item_name,jdbcType=VARCHAR}, #{item_unit_price,jdbcType=DOUBLE}, 
      #{quantity,jdbcType=INTEGER}, #{dept_id,jdbcType=INTEGER}, #{prescription_generation_time,jdbcType=TIMESTAMP}, 
      #{generator_id,jdbcType=INTEGER}, #{payment_operation_time,jdbcType=TIMESTAMP}, 
      #{operator_id,jdbcType=INTEGER}, #{method,jdbcType=VARCHAR}, #{related_refund_id,jdbcType=INTEGER}, 
      #{is_deleted,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="org.neu.entity.PaymentDtl">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into payment_dtl
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="reg_id != null">
        reg_id,
      </if>
      <if test="invoice_no != null">
        invoice_no,
      </if>
      <if test="item_id != null">
        item_id,
      </if>
      <if test="item_type != null">
        item_type,
      </if>
      <if test="item_name != null">
        item_name,
      </if>
      <if test="item_unit_price != null">
        item_unit_price,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="dept_id != null">
        dept_id,
      </if>
      <if test="prescription_generation_time != null">
        prescription_generation_time,
      </if>
      <if test="generator_id != null">
        generator_id,
      </if>
      <if test="payment_operation_time != null">
        payment_operation_time,
      </if>
      <if test="operator_id != null">
        operator_id,
      </if>
      <if test="method != null">
        method,
      </if>
      <if test="related_refund_id != null">
        related_refund_id,
      </if>
      <if test="is_deleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="reg_id != null">
        #{reg_id,jdbcType=INTEGER},
      </if>
      <if test="invoice_no != null">
        #{invoice_no,jdbcType=INTEGER},
      </if>
      <if test="item_id != null">
        #{item_id,jdbcType=INTEGER},
      </if>
      <if test="item_type != null">
        #{item_type,jdbcType=BIT},
      </if>
      <if test="item_name != null">
        #{item_name,jdbcType=VARCHAR},
      </if>
      <if test="item_unit_price != null">
        #{item_unit_price,jdbcType=DOUBLE},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="dept_id != null">
        #{dept_id,jdbcType=INTEGER},
      </if>
      <if test="prescription_generation_time != null">
        #{prescription_generation_time,jdbcType=TIMESTAMP},
      </if>
      <if test="generator_id != null">
        #{generator_id,jdbcType=INTEGER},
      </if>
      <if test="payment_operation_time != null">
        #{payment_operation_time,jdbcType=TIMESTAMP},
      </if>
      <if test="operator_id != null">
        #{operator_id,jdbcType=INTEGER},
      </if>
      <if test="method != null">
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="related_refund_id != null">
        #{related_refund_id,jdbcType=INTEGER},
      </if>
      <if test="is_deleted != null">
        #{is_deleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.neu.entity.PaymentDtlExample" resultType="java.lang.Long">
    select count(*) from payment_dtl
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update payment_dtl
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.reg_id != null">
        reg_id = #{record.reg_id,jdbcType=INTEGER},
      </if>
      <if test="record.invoice_no != null">
        invoice_no = #{record.invoice_no,jdbcType=INTEGER},
      </if>
      <if test="record.item_id != null">
        item_id = #{record.item_id,jdbcType=INTEGER},
      </if>
      <if test="record.item_type != null">
        item_type = #{record.item_type,jdbcType=BIT},
      </if>
      <if test="record.item_name != null">
        item_name = #{record.item_name,jdbcType=VARCHAR},
      </if>
      <if test="record.item_unit_price != null">
        item_unit_price = #{record.item_unit_price,jdbcType=DOUBLE},
      </if>
      <if test="record.quantity != null">
        quantity = #{record.quantity,jdbcType=INTEGER},
      </if>
      <if test="record.dept_id != null">
        dept_id = #{record.dept_id,jdbcType=INTEGER},
      </if>
      <if test="record.prescription_generation_time != null">
        prescription_generation_time = #{record.prescription_generation_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.generator_id != null">
        generator_id = #{record.generator_id,jdbcType=INTEGER},
      </if>
      <if test="record.payment_operation_time != null">
        payment_operation_time = #{record.payment_operation_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operator_id != null">
        operator_id = #{record.operator_id,jdbcType=INTEGER},
      </if>
      <if test="record.method != null">
        method = #{record.method,jdbcType=VARCHAR},
      </if>
      <if test="record.related_refund_id != null">
        related_refund_id = #{record.related_refund_id,jdbcType=INTEGER},
      </if>
      <if test="record.is_deleted != null">
        is_deleted = #{record.is_deleted,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update payment_dtl
    set id = #{record.id,jdbcType=INTEGER},
      reg_id = #{record.reg_id,jdbcType=INTEGER},
      invoice_no = #{record.invoice_no,jdbcType=INTEGER},
      item_id = #{record.item_id,jdbcType=INTEGER},
      item_type = #{record.item_type,jdbcType=BIT},
      item_name = #{record.item_name,jdbcType=VARCHAR},
      item_unit_price = #{record.item_unit_price,jdbcType=DOUBLE},
      quantity = #{record.quantity,jdbcType=INTEGER},
      dept_id = #{record.dept_id,jdbcType=INTEGER},
      prescription_generation_time = #{record.prescription_generation_time,jdbcType=TIMESTAMP},
      generator_id = #{record.generator_id,jdbcType=INTEGER},
      payment_operation_time = #{record.payment_operation_time,jdbcType=TIMESTAMP},
      operator_id = #{record.operator_id,jdbcType=INTEGER},
      method = #{record.method,jdbcType=VARCHAR},
      related_refund_id = #{record.related_refund_id,jdbcType=INTEGER},
      is_deleted = #{record.is_deleted,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.neu.entity.PaymentDtl">
    update payment_dtl
    <set>
      <if test="reg_id != null">
        reg_id = #{reg_id,jdbcType=INTEGER},
      </if>
      <if test="invoice_no != null">
        invoice_no = #{invoice_no,jdbcType=INTEGER},
      </if>
      <if test="item_id != null">
        item_id = #{item_id,jdbcType=INTEGER},
      </if>
      <if test="item_type != null">
        item_type = #{item_type,jdbcType=BIT},
      </if>
      <if test="item_name != null">
        item_name = #{item_name,jdbcType=VARCHAR},
      </if>
      <if test="item_unit_price != null">
        item_unit_price = #{item_unit_price,jdbcType=DOUBLE},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="dept_id != null">
        dept_id = #{dept_id,jdbcType=INTEGER},
      </if>
      <if test="prescription_generation_time != null">
        prescription_generation_time = #{prescription_generation_time,jdbcType=TIMESTAMP},
      </if>
      <if test="generator_id != null">
        generator_id = #{generator_id,jdbcType=INTEGER},
      </if>
      <if test="payment_operation_time != null">
        payment_operation_time = #{payment_operation_time,jdbcType=TIMESTAMP},
      </if>
      <if test="operator_id != null">
        operator_id = #{operator_id,jdbcType=INTEGER},
      </if>
      <if test="method != null">
        method = #{method,jdbcType=VARCHAR},
      </if>
      <if test="related_refund_id != null">
        related_refund_id = #{related_refund_id,jdbcType=INTEGER},
      </if>
      <if test="is_deleted != null">
        is_deleted = #{is_deleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.neu.entity.PaymentDtl">
    update payment_dtl
    set reg_id = #{reg_id,jdbcType=INTEGER},
      invoice_no = #{invoice_no,jdbcType=INTEGER},
      item_id = #{item_id,jdbcType=INTEGER},
      item_type = #{item_type,jdbcType=BIT},
      item_name = #{item_name,jdbcType=VARCHAR},
      item_unit_price = #{item_unit_price,jdbcType=DOUBLE},
      quantity = #{quantity,jdbcType=INTEGER},
      dept_id = #{dept_id,jdbcType=INTEGER},
      prescription_generation_time = #{prescription_generation_time,jdbcType=TIMESTAMP},
      generator_id = #{generator_id,jdbcType=INTEGER},
      payment_operation_time = #{payment_operation_time,jdbcType=TIMESTAMP},
      operator_id = #{operator_id,jdbcType=INTEGER},
      method = #{method,jdbcType=VARCHAR},
      related_refund_id = #{related_refund_id,jdbcType=INTEGER},
      is_deleted = #{is_deleted,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="logicalDeleteByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update payment_dtl set is_deleted = 1
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="logicalDeleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update payment_dtl set is_deleted = 1
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="entity.PaymentDtl">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="reg_id" jdbcType="INTEGER" property="reg_id" />
    <result column="invoice_no" jdbcType="INTEGER" property="invoice_no" />
    <result column="item_id" jdbcType="INTEGER" property="item_id" />
    <result column="item_type" jdbcType="BIT" property="item_type" />
    <result column="item_name" jdbcType="VARCHAR" property="item_name" />
    <result column="item_unit_price" jdbcType="DOUBLE" property="item_unit_price" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="dept_id" jdbcType="INTEGER" property="dept_id" />
    <result column="prescription_generation_time" jdbcType="TIMESTAMP" property="prescription_generation_time" />
    <result column="generator_id" jdbcType="INTEGER" property="generator_id" />
    <result column="payment_operation_time" jdbcType="TIMESTAMP" property="payment_operation_time" />
    <result column="operator_id" jdbcType="INTEGER" property="operator_id" />
    <result column="method" jdbcType="VARCHAR" property="method" />
    <result column="related_refund_id" jdbcType="INTEGER" property="related_refund_id" />
    <result column="is_deleted" jdbcType="BIT" property="is_deleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, reg_id, invoice_no, item_id, item_type, item_name, item_unit_price, quantity, 
    dept_id, prescription_generation_time, generator_id, payment_operation_time, operator_id, 
    method, related_refund_id, is_deleted
  </sql>
  <select id="selectByExample" parameterType="entity.PaymentDtlExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from payment_dtl
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from payment_dtl
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from payment_dtl
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="entity.PaymentDtlExample">
    delete from payment_dtl
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="entity.PaymentDtl">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into payment_dtl (reg_id, invoice_no, item_id, 
      item_type, item_name, item_unit_price, 
      quantity, dept_id, prescription_generation_time, 
      generator_id, payment_operation_time, 
      operator_id, method, related_refund_id, 
      is_deleted)
    values (#{reg_id,jdbcType=INTEGER}, #{invoice_no,jdbcType=INTEGER}, #{item_id,jdbcType=INTEGER}, 
      #{item_type,jdbcType=BIT}, #{item_name,jdbcType=VARCHAR}, #{item_unit_price,jdbcType=DOUBLE}, 
      #{quantity,jdbcType=INTEGER}, #{dept_id,jdbcType=INTEGER}, #{prescription_generation_time,jdbcType=TIMESTAMP}, 
      #{generator_id,jdbcType=INTEGER}, #{payment_operation_time,jdbcType=TIMESTAMP}, 
      #{operator_id,jdbcType=INTEGER}, #{method,jdbcType=VARCHAR}, #{related_refund_id,jdbcType=INTEGER}, 
      #{is_deleted,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="entity.PaymentDtl">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into payment_dtl
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="reg_id != null">
        reg_id,
      </if>
      <if test="invoice_no != null">
        invoice_no,
      </if>
      <if test="item_id != null">
        item_id,
      </if>
      <if test="item_type != null">
        item_type,
      </if>
      <if test="item_name != null">
        item_name,
      </if>
      <if test="item_unit_price != null">
        item_unit_price,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="dept_id != null">
        dept_id,
      </if>
      <if test="prescription_generation_time != null">
        prescription_generation_time,
      </if>
      <if test="generator_id != null">
        generator_id,
      </if>
      <if test="payment_operation_time != null">
        payment_operation_time,
      </if>
      <if test="operator_id != null">
        operator_id,
      </if>
      <if test="method != null">
        method,
      </if>
      <if test="related_refund_id != null">
        related_refund_id,
      </if>
      <if test="is_deleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="reg_id != null">
        #{reg_id,jdbcType=INTEGER},
      </if>
      <if test="invoice_no != null">
        #{invoice_no,jdbcType=INTEGER},
      </if>
      <if test="item_id != null">
        #{item_id,jdbcType=INTEGER},
      </if>
      <if test="item_type != null">
        #{item_type,jdbcType=BIT},
      </if>
      <if test="item_name != null">
        #{item_name,jdbcType=VARCHAR},
      </if>
      <if test="item_unit_price != null">
        #{item_unit_price,jdbcType=DOUBLE},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="dept_id != null">
        #{dept_id,jdbcType=INTEGER},
      </if>
      <if test="prescription_generation_time != null">
        #{prescription_generation_time,jdbcType=TIMESTAMP},
      </if>
      <if test="generator_id != null">
        #{generator_id,jdbcType=INTEGER},
      </if>
      <if test="payment_operation_time != null">
        #{payment_operation_time,jdbcType=TIMESTAMP},
      </if>
      <if test="operator_id != null">
        #{operator_id,jdbcType=INTEGER},
      </if>
      <if test="method != null">
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="related_refund_id != null">
        #{related_refund_id,jdbcType=INTEGER},
      </if>
      <if test="is_deleted != null">
        #{is_deleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="entity.PaymentDtlExample" resultType="java.lang.Long">
    select count(*) from payment_dtl
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update payment_dtl
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.reg_id != null">
        reg_id = #{record.reg_id,jdbcType=INTEGER},
      </if>
      <if test="record.invoice_no != null">
        invoice_no = #{record.invoice_no,jdbcType=INTEGER},
      </if>
      <if test="record.item_id != null">
        item_id = #{record.item_id,jdbcType=INTEGER},
      </if>
      <if test="record.item_type != null">
        item_type = #{record.item_type,jdbcType=BIT},
      </if>
      <if test="record.item_name != null">
        item_name = #{record.item_name,jdbcType=VARCHAR},
      </if>
      <if test="record.item_unit_price != null">
        item_unit_price = #{record.item_unit_price,jdbcType=DOUBLE},
      </if>
      <if test="record.quantity != null">
        quantity = #{record.quantity,jdbcType=INTEGER},
      </if>
      <if test="record.dept_id != null">
        dept_id = #{record.dept_id,jdbcType=INTEGER},
      </if>
      <if test="record.prescription_generation_time != null">
        prescription_generation_time = #{record.prescription_generation_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.generator_id != null">
        generator_id = #{record.generator_id,jdbcType=INTEGER},
      </if>
      <if test="record.payment_operation_time != null">
        payment_operation_time = #{record.payment_operation_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operator_id != null">
        operator_id = #{record.operator_id,jdbcType=INTEGER},
      </if>
      <if test="record.method != null">
        method = #{record.method,jdbcType=VARCHAR},
      </if>
      <if test="record.related_refund_id != null">
        related_refund_id = #{record.related_refund_id,jdbcType=INTEGER},
      </if>
      <if test="record.is_deleted != null">
        is_deleted = #{record.is_deleted,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update payment_dtl
    set id = #{record.id,jdbcType=INTEGER},
      reg_id = #{record.reg_id,jdbcType=INTEGER},
      invoice_no = #{record.invoice_no,jdbcType=INTEGER},
      item_id = #{record.item_id,jdbcType=INTEGER},
      item_type = #{record.item_type,jdbcType=BIT},
      item_name = #{record.item_name,jdbcType=VARCHAR},
      item_unit_price = #{record.item_unit_price,jdbcType=DOUBLE},
      quantity = #{record.quantity,jdbcType=INTEGER},
      dept_id = #{record.dept_id,jdbcType=INTEGER},
      prescription_generation_time = #{record.prescription_generation_time,jdbcType=TIMESTAMP},
      generator_id = #{record.generator_id,jdbcType=INTEGER},
      payment_operation_time = #{record.payment_operation_time,jdbcType=TIMESTAMP},
      operator_id = #{record.operator_id,jdbcType=INTEGER},
      method = #{record.method,jdbcType=VARCHAR},
      related_refund_id = #{record.related_refund_id,jdbcType=INTEGER},
      is_deleted = #{record.is_deleted,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="entity.PaymentDtl">
    update payment_dtl
    <set>
      <if test="reg_id != null">
        reg_id = #{reg_id,jdbcType=INTEGER},
      </if>
      <if test="invoice_no != null">
        invoice_no = #{invoice_no,jdbcType=INTEGER},
      </if>
      <if test="item_id != null">
        item_id = #{item_id,jdbcType=INTEGER},
      </if>
      <if test="item_type != null">
        item_type = #{item_type,jdbcType=BIT},
      </if>
      <if test="item_name != null">
        item_name = #{item_name,jdbcType=VARCHAR},
      </if>
      <if test="item_unit_price != null">
        item_unit_price = #{item_unit_price,jdbcType=DOUBLE},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="dept_id != null">
        dept_id = #{dept_id,jdbcType=INTEGER},
      </if>
      <if test="prescription_generation_time != null">
        prescription_generation_time = #{prescription_generation_time,jdbcType=TIMESTAMP},
      </if>
      <if test="generator_id != null">
        generator_id = #{generator_id,jdbcType=INTEGER},
      </if>
      <if test="payment_operation_time != null">
        payment_operation_time = #{payment_operation_time,jdbcType=TIMESTAMP},
      </if>
      <if test="operator_id != null">
        operator_id = #{operator_id,jdbcType=INTEGER},
      </if>
      <if test="method != null">
        method = #{method,jdbcType=VARCHAR},
      </if>
      <if test="related_refund_id != null">
        related_refund_id = #{related_refund_id,jdbcType=INTEGER},
      </if>
      <if test="is_deleted != null">
        is_deleted = #{is_deleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.PaymentDtl">
    update payment_dtl
    set reg_id = #{reg_id,jdbcType=INTEGER},
      invoice_no = #{invoice_no,jdbcType=INTEGER},
      item_id = #{item_id,jdbcType=INTEGER},
      item_type = #{item_type,jdbcType=BIT},
      item_name = #{item_name,jdbcType=VARCHAR},
      item_unit_price = #{item_unit_price,jdbcType=DOUBLE},
      quantity = #{quantity,jdbcType=INTEGER},
      dept_id = #{dept_id,jdbcType=INTEGER},
      prescription_generation_time = #{prescription_generation_time,jdbcType=TIMESTAMP},
      generator_id = #{generator_id,jdbcType=INTEGER},
      payment_operation_time = #{payment_operation_time,jdbcType=TIMESTAMP},
      operator_id = #{operator_id,jdbcType=INTEGER},
      method = #{method,jdbcType=VARCHAR},
      related_refund_id = #{related_refund_id,jdbcType=INTEGER},
      is_deleted = #{is_deleted,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>