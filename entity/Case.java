package com.neu.his.entity;

import java.io.Serializable;

public class Case implements Serializable {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table case
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    public static final Boolean NOT_DELETED = false;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table case
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    public static final Boolean DELETED = true;

    private Integer id;

    private Integer caseNo;

    private Integer regId;

    private String symptom;

    private String currentMediHistory;

    private String currentDiseaseTreatment;

    private String mediHistory;

    private String allergy;

    private String bodyInspection;

    private String suggestion;

    private String attention;

    private String inspectionResult;

    private String diagnoseResult;

    private String advise;

    private Integer caseStatus;

    private Boolean isDeleted;

    private static final long serialVersionUID = 1L;

    public Integer getId() {
        return id;
    }

    public Case withId(Integer id) {
        this.setId(id);
        return this;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public Integer getCaseNo() {
        return caseNo;
    }

    public Case withCaseNo(Integer caseNo) {
        this.setCaseNo(caseNo);
        return this;
    }

    public void setCaseNo(Integer caseNo) {
        this.caseNo = caseNo;
    }

    public Integer getRegId() {
        return regId;
    }

    public Case withRegId(Integer regId) {
        this.setRegId(regId);
        return this;
    }

    public void setRegId(Integer regId) {
        this.regId = regId;
    }

    public String getSymptom() {
        return symptom;
    }

    public Case withSymptom(String symptom) {
        this.setSymptom(symptom);
        return this;
    }

    public void setSymptom(String symptom) {
        this.symptom = symptom;
    }

    public String getCurrentMediHistory() {
        return currentMediHistory;
    }

    public Case withCurrentMediHistory(String currentMediHistory) {
        this.setCurrentMediHistory(currentMediHistory);
        return this;
    }

    public void setCurrentMediHistory(String currentMediHistory) {
        this.currentMediHistory = currentMediHistory;
    }

    public String getCurrentDiseaseTreatment() {
        return currentDiseaseTreatment;
    }

    public Case withCurrentDiseaseTreatment(String currentDiseaseTreatment) {
        this.setCurrentDiseaseTreatment(currentDiseaseTreatment);
        return this;
    }

    public void setCurrentDiseaseTreatment(String currentDiseaseTreatment) {
        this.currentDiseaseTreatment = currentDiseaseTreatment;
    }

    public String getMediHistory() {
        return mediHistory;
    }

    public Case withMediHistory(String mediHistory) {
        this.setMediHistory(mediHistory);
        return this;
    }

    public void setMediHistory(String mediHistory) {
        this.mediHistory = mediHistory;
    }

    public String getAllergy() {
        return allergy;
    }

    public Case withAllergy(String allergy) {
        this.setAllergy(allergy);
        return this;
    }

    public void setAllergy(String allergy) {
        this.allergy = allergy;
    }

    public String getBodyInspection() {
        return bodyInspection;
    }

    public Case withBodyInspection(String bodyInspection) {
        this.setBodyInspection(bodyInspection);
        return this;
    }

    public void setBodyInspection(String bodyInspection) {
        this.bodyInspection = bodyInspection;
    }

    public String getSuggestion() {
        return suggestion;
    }

    public Case withSuggestion(String suggestion) {
        this.setSuggestion(suggestion);
        return this;
    }

    public void setSuggestion(String suggestion) {
        this.suggestion = suggestion;
    }

    public String getAttention() {
        return attention;
    }

    public Case withAttention(String attention) {
        this.setAttention(attention);
        return this;
    }

    public void setAttention(String attention) {
        this.attention = attention;
    }

    public String getInspectionResult() {
        return inspectionResult;
    }

    public Case withInspectionResult(String inspectionResult) {
        this.setInspectionResult(inspectionResult);
        return this;
    }

    public void setInspectionResult(String inspectionResult) {
        this.inspectionResult = inspectionResult;
    }

    public String getDiagnoseResult() {
        return diagnoseResult;
    }

    public Case withDiagnoseResult(String diagnoseResult) {
        this.setDiagnoseResult(diagnoseResult);
        return this;
    }

    public void setDiagnoseResult(String diagnoseResult) {
        this.diagnoseResult = diagnoseResult;
    }

    public String getAdvise() {
        return advise;
    }

    public Case withAdvise(String advise) {
        this.setAdvise(advise);
        return this;
    }

    public void setAdvise(String advise) {
        this.advise = advise;
    }

    public Integer getCaseStatus() {
        return caseStatus;
    }

    public Case withCaseStatus(Integer caseStatus) {
        this.setCaseStatus(caseStatus);
        return this;
    }

    public void setCaseStatus(Integer caseStatus) {
        this.caseStatus = caseStatus;
    }

    public Boolean getIsDeleted() {
        return isDeleted;
    }

    public Case withIsDeleted(Boolean isDeleted) {
        this.setIsDeleted(isDeleted);
        return this;
    }

    public void setIsDeleted(Boolean isDeleted) {
        this.isDeleted = isDeleted;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", caseNo=").append(caseNo);
        sb.append(", regId=").append(regId);
        sb.append(", symptom=").append(symptom);
        sb.append(", currentMediHistory=").append(currentMediHistory);
        sb.append(", currentDiseaseTreatment=").append(currentDiseaseTreatment);
        sb.append(", mediHistory=").append(mediHistory);
        sb.append(", allergy=").append(allergy);
        sb.append(", bodyInspection=").append(bodyInspection);
        sb.append(", suggestion=").append(suggestion);
        sb.append(", attention=").append(attention);
        sb.append(", inspectionResult=").append(inspectionResult);
        sb.append(", diagnoseResult=").append(diagnoseResult);
        sb.append(", advise=").append(advise);
        sb.append(", caseStatus=").append(caseStatus);
        sb.append(", isDeleted=").append(isDeleted);
        sb.append("]");
        return sb.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    public void andLogicalDeleted(boolean deleted) {
        setIsDeleted(deleted ? DELETED : NOT_DELETED);
    }

    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        Case other = (Case) that;
        return (this.getId() == null ? other.getId() == null : this.getId().equals(other.getId()))
            && (this.getCaseNo() == null ? other.getCaseNo() == null : this.getCaseNo().equals(other.getCaseNo()))
            && (this.getRegId() == null ? other.getRegId() == null : this.getRegId().equals(other.getRegId()))
            && (this.getSymptom() == null ? other.getSymptom() == null : this.getSymptom().equals(other.getSymptom()))
            && (this.getCurrentMediHistory() == null ? other.getCurrentMediHistory() == null : this.getCurrentMediHistory().equals(other.getCurrentMediHistory()))
            && (this.getCurrentDiseaseTreatment() == null ? other.getCurrentDiseaseTreatment() == null : this.getCurrentDiseaseTreatment().equals(other.getCurrentDiseaseTreatment()))
            && (this.getMediHistory() == null ? other.getMediHistory() == null : this.getMediHistory().equals(other.getMediHistory()))
            && (this.getAllergy() == null ? other.getAllergy() == null : this.getAllergy().equals(other.getAllergy()))
            && (this.getBodyInspection() == null ? other.getBodyInspection() == null : this.getBodyInspection().equals(other.getBodyInspection()))
            && (this.getSuggestion() == null ? other.getSuggestion() == null : this.getSuggestion().equals(other.getSuggestion()))
            && (this.getAttention() == null ? other.getAttention() == null : this.getAttention().equals(other.getAttention()))
            && (this.getInspectionResult() == null ? other.getInspectionResult() == null : this.getInspectionResult().equals(other.getInspectionResult()))
            && (this.getDiagnoseResult() == null ? other.getDiagnoseResult() == null : this.getDiagnoseResult().equals(other.getDiagnoseResult()))
            && (this.getAdvise() == null ? other.getAdvise() == null : this.getAdvise().equals(other.getAdvise()))
            && (this.getCaseStatus() == null ? other.getCaseStatus() == null : this.getCaseStatus().equals(other.getCaseStatus()))
            && (this.getIsDeleted() == null ? other.getIsDeleted() == null : this.getIsDeleted().equals(other.getIsDeleted()));
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
        result = prime * result + ((getCaseNo() == null) ? 0 : getCaseNo().hashCode());
        result = prime * result + ((getRegId() == null) ? 0 : getRegId().hashCode());
        result = prime * result + ((getSymptom() == null) ? 0 : getSymptom().hashCode());
        result = prime * result + ((getCurrentMediHistory() == null) ? 0 : getCurrentMediHistory().hashCode());
        result = prime * result + ((getCurrentDiseaseTreatment() == null) ? 0 : getCurrentDiseaseTreatment().hashCode());
        result = prime * result + ((getMediHistory() == null) ? 0 : getMediHistory().hashCode());
        result = prime * result + ((getAllergy() == null) ? 0 : getAllergy().hashCode());
        result = prime * result + ((getBodyInspection() == null) ? 0 : getBodyInspection().hashCode());
        result = prime * result + ((getSuggestion() == null) ? 0 : getSuggestion().hashCode());
        result = prime * result + ((getAttention() == null) ? 0 : getAttention().hashCode());
        result = prime * result + ((getInspectionResult() == null) ? 0 : getInspectionResult().hashCode());
        result = prime * result + ((getDiagnoseResult() == null) ? 0 : getDiagnoseResult().hashCode());
        result = prime * result + ((getAdvise() == null) ? 0 : getAdvise().hashCode());
        result = prime * result + ((getCaseStatus() == null) ? 0 : getCaseStatus().hashCode());
        result = prime * result + ((getIsDeleted() == null) ? 0 : getIsDeleted().hashCode());
        return result;
    }
}