package com.neu.his.entity;

import java.io.Serializable;
import java.util.Date;

public class NonDrugApplication implements Serializable {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table non_drug_application
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    public static final Boolean NOT_DELETED = false;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table non_drug_application
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    public static final Boolean DELETED = true;

    private Integer id;

    private Integer caseId;

    private Integer regId;

    private Integer itemId;

    private String itemName;

    private String requirement;

    private String checkPart;

    private Boolean isUrgent;

    private Integer num;

    private Date generateTime;

    private Integer generateDoctorId;

    private Integer checkerId;

    private Integer recorderId;

    private Date checkTime;

    private String checkResult;

    private Date resultTime;

    private Integer applicationStatus;

    private Integer recordCategory;

    private Boolean isDeleted;

    private static final long serialVersionUID = 1L;

    public Integer getId() {
        return id;
    }

    public NonDrugApplication withId(Integer id) {
        this.setId(id);
        return this;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public Integer getCaseId() {
        return caseId;
    }

    public NonDrugApplication withCaseId(Integer caseId) {
        this.setCaseId(caseId);
        return this;
    }

    public void setCaseId(Integer caseId) {
        this.caseId = caseId;
    }

    public Integer getRegId() {
        return regId;
    }

    public NonDrugApplication withRegId(Integer regId) {
        this.setRegId(regId);
        return this;
    }

    public void setRegId(Integer regId) {
        this.regId = regId;
    }

    public Integer getItemId() {
        return itemId;
    }

    public NonDrugApplication withItemId(Integer itemId) {
        this.setItemId(itemId);
        return this;
    }

    public void setItemId(Integer itemId) {
        this.itemId = itemId;
    }

    public String getItemName() {
        return itemName;
    }

    public NonDrugApplication withItemName(String itemName) {
        this.setItemName(itemName);
        return this;
    }

    public void setItemName(String itemName) {
        this.itemName = itemName;
    }

    public String getRequirement() {
        return requirement;
    }

    public NonDrugApplication withRequirement(String requirement) {
        this.setRequirement(requirement);
        return this;
    }

    public void setRequirement(String requirement) {
        this.requirement = requirement;
    }

    public String getCheckPart() {
        return checkPart;
    }

    public NonDrugApplication withCheckPart(String checkPart) {
        this.setCheckPart(checkPart);
        return this;
    }

    public void setCheckPart(String checkPart) {
        this.checkPart = checkPart;
    }

    public Boolean getIsUrgent() {
        return isUrgent;
    }

    public NonDrugApplication withIsUrgent(Boolean isUrgent) {
        this.setIsUrgent(isUrgent);
        return this;
    }

    public void setIsUrgent(Boolean isUrgent) {
        this.isUrgent = isUrgent;
    }

    public Integer getNum() {
        return num;
    }

    public NonDrugApplication withNum(Integer num) {
        this.setNum(num);
        return this;
    }

    public void setNum(Integer num) {
        this.num = num;
    }

    public Date getGenerateTime() {
        return generateTime;
    }

    public NonDrugApplication withGenerateTime(Date generateTime) {
        this.setGenerateTime(generateTime);
        return this;
    }

    public void setGenerateTime(Date generateTime) {
        this.generateTime = generateTime;
    }

    public Integer getGenerateDoctorId() {
        return generateDoctorId;
    }

    public NonDrugApplication withGenerateDoctorId(Integer generateDoctorId) {
        this.setGenerateDoctorId(generateDoctorId);
        return this;
    }

    public void setGenerateDoctorId(Integer generateDoctorId) {
        this.generateDoctorId = generateDoctorId;
    }

    public Integer getCheckerId() {
        return checkerId;
    }

    public NonDrugApplication withCheckerId(Integer checkerId) {
        this.setCheckerId(checkerId);
        return this;
    }

    public void setCheckerId(Integer checkerId) {
        this.checkerId = checkerId;
    }

    public Integer getRecorderId() {
        return recorderId;
    }

    public NonDrugApplication withRecorderId(Integer recorderId) {
        this.setRecorderId(recorderId);
        return this;
    }

    public void setRecorderId(Integer recorderId) {
        this.recorderId = recorderId;
    }

    public Date getCheckTime() {
        return checkTime;
    }

    public NonDrugApplication withCheckTime(Date checkTime) {
        this.setCheckTime(checkTime);
        return this;
    }

    public void setCheckTime(Date checkTime) {
        this.checkTime = checkTime;
    }

    public String getCheckResult() {
        return checkResult;
    }

    public NonDrugApplication withCheckResult(String checkResult) {
        this.setCheckResult(checkResult);
        return this;
    }

    public void setCheckResult(String checkResult) {
        this.checkResult = checkResult;
    }

    public Date getResultTime() {
        return resultTime;
    }

    public NonDrugApplication withResultTime(Date resultTime) {
        this.setResultTime(resultTime);
        return this;
    }

    public void setResultTime(Date resultTime) {
        this.resultTime = resultTime;
    }

    public Integer getApplicationStatus() {
        return applicationStatus;
    }

    public NonDrugApplication withApplicationStatus(Integer applicationStatus) {
        this.setApplicationStatus(applicationStatus);
        return this;
    }

    public void setApplicationStatus(Integer applicationStatus) {
        this.applicationStatus = applicationStatus;
    }

    public Integer getRecordCategory() {
        return recordCategory;
    }

    public NonDrugApplication withRecordCategory(Integer recordCategory) {
        this.setRecordCategory(recordCategory);
        return this;
    }

    public void setRecordCategory(Integer recordCategory) {
        this.recordCategory = recordCategory;
    }

    public Boolean getIsDeleted() {
        return isDeleted;
    }

    public NonDrugApplication withIsDeleted(Boolean isDeleted) {
        this.setIsDeleted(isDeleted);
        return this;
    }

    public void setIsDeleted(Boolean isDeleted) {
        this.isDeleted = isDeleted;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", caseId=").append(caseId);
        sb.append(", regId=").append(regId);
        sb.append(", itemId=").append(itemId);
        sb.append(", itemName=").append(itemName);
        sb.append(", requirement=").append(requirement);
        sb.append(", checkPart=").append(checkPart);
        sb.append(", isUrgent=").append(isUrgent);
        sb.append(", num=").append(num);
        sb.append(", generateTime=").append(generateTime);
        sb.append(", generateDoctorId=").append(generateDoctorId);
        sb.append(", checkerId=").append(checkerId);
        sb.append(", recorderId=").append(recorderId);
        sb.append(", checkTime=").append(checkTime);
        sb.append(", checkResult=").append(checkResult);
        sb.append(", resultTime=").append(resultTime);
        sb.append(", applicationStatus=").append(applicationStatus);
        sb.append(", recordCategory=").append(recordCategory);
        sb.append(", isDeleted=").append(isDeleted);
        sb.append("]");
        return sb.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table non_drug_application
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    public void andLogicalDeleted(boolean deleted) {
        setIsDeleted(deleted ? DELETED : NOT_DELETED);
    }

    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        NonDrugApplication other = (NonDrugApplication) that;
        return (this.getId() == null ? other.getId() == null : this.getId().equals(other.getId()))
            && (this.getCaseId() == null ? other.getCaseId() == null : this.getCaseId().equals(other.getCaseId()))
            && (this.getRegId() == null ? other.getRegId() == null : this.getRegId().equals(other.getRegId()))
            && (this.getItemId() == null ? other.getItemId() == null : this.getItemId().equals(other.getItemId()))
            && (this.getItemName() == null ? other.getItemName() == null : this.getItemName().equals(other.getItemName()))
            && (this.getRequirement() == null ? other.getRequirement() == null : this.getRequirement().equals(other.getRequirement()))
            && (this.getCheckPart() == null ? other.getCheckPart() == null : this.getCheckPart().equals(other.getCheckPart()))
            && (this.getIsUrgent() == null ? other.getIsUrgent() == null : this.getIsUrgent().equals(other.getIsUrgent()))
            && (this.getNum() == null ? other.getNum() == null : this.getNum().equals(other.getNum()))
            && (this.getGenerateTime() == null ? other.getGenerateTime() == null : this.getGenerateTime().equals(other.getGenerateTime()))
            && (this.getGenerateDoctorId() == null ? other.getGenerateDoctorId() == null : this.getGenerateDoctorId().equals(other.getGenerateDoctorId()))
            && (this.getCheckerId() == null ? other.getCheckerId() == null : this.getCheckerId().equals(other.getCheckerId()))
            && (this.getRecorderId() == null ? other.getRecorderId() == null : this.getRecorderId().equals(other.getRecorderId()))
            && (this.getCheckTime() == null ? other.getCheckTime() == null : this.getCheckTime().equals(other.getCheckTime()))
            && (this.getCheckResult() == null ? other.getCheckResult() == null : this.getCheckResult().equals(other.getCheckResult()))
            && (this.getResultTime() == null ? other.getResultTime() == null : this.getResultTime().equals(other.getResultTime()))
            && (this.getApplicationStatus() == null ? other.getApplicationStatus() == null : this.getApplicationStatus().equals(other.getApplicationStatus()))
            && (this.getRecordCategory() == null ? other.getRecordCategory() == null : this.getRecordCategory().equals(other.getRecordCategory()))
            && (this.getIsDeleted() == null ? other.getIsDeleted() == null : this.getIsDeleted().equals(other.getIsDeleted()));
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
        result = prime * result + ((getCaseId() == null) ? 0 : getCaseId().hashCode());
        result = prime * result + ((getRegId() == null) ? 0 : getRegId().hashCode());
        result = prime * result + ((getItemId() == null) ? 0 : getItemId().hashCode());
        result = prime * result + ((getItemName() == null) ? 0 : getItemName().hashCode());
        result = prime * result + ((getRequirement() == null) ? 0 : getRequirement().hashCode());
        result = prime * result + ((getCheckPart() == null) ? 0 : getCheckPart().hashCode());
        result = prime * result + ((getIsUrgent() == null) ? 0 : getIsUrgent().hashCode());
        result = prime * result + ((getNum() == null) ? 0 : getNum().hashCode());
        result = prime * result + ((getGenerateTime() == null) ? 0 : getGenerateTime().hashCode());
        result = prime * result + ((getGenerateDoctorId() == null) ? 0 : getGenerateDoctorId().hashCode());
        result = prime * result + ((getCheckerId() == null) ? 0 : getCheckerId().hashCode());
        result = prime * result + ((getRecorderId() == null) ? 0 : getRecorderId().hashCode());
        result = prime * result + ((getCheckTime() == null) ? 0 : getCheckTime().hashCode());
        result = prime * result + ((getCheckResult() == null) ? 0 : getCheckResult().hashCode());
        result = prime * result + ((getResultTime() == null) ? 0 : getResultTime().hashCode());
        result = prime * result + ((getApplicationStatus() == null) ? 0 : getApplicationStatus().hashCode());
        result = prime * result + ((getRecordCategory() == null) ? 0 : getRecordCategory().hashCode());
        result = prime * result + ((getIsDeleted() == null) ? 0 : getIsDeleted().hashCode());
        return result;
    }
}